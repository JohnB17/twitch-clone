{"version":3,"sources":["apis/streams.js","actions/index.js","actions/types.js","components/streams/StreamForm.js","components/streams/StreamCreate.js","components/streams/StreamEdit.js","components/Modal.js","history.js","components/streams/StreamDelete.js","components/streams/StreamList.js","components/streams/StreamShow.js","components/GoogleAuth.js","components/Header.js","components/App.js","reducers/authReducer.js","reducers/index.js","reducers/streamReducer.js","index.js"],"names":["axios","create","baseURL","fetchStream","id","_ref3","Object","asyncToGenerator","regenerator_default","a","mark","_callee3","dispatch","response","wrap","_context3","prev","next","streams","get","concat","sent","type","payload","data","stop","_x3","apply","this","arguments","StreamForm","renderInput","_ref","input","label","meta","className","error","touched","react_default","createElement","assign","autoComplete","_this","renderError","onSubmit","formValues","props","_ref2","handleSubmit","Field","name","component","React","Component","reduxForm","form","validate","errors","title","description","StreamCreate","createStream","streams_StreamForm","connect","_callee","_context","post","_x","StreamEdit","editStream","match","params","stream","initialValues","_","pick","state","ownProps","_ref4","_callee4","_context4","put","_x4","Modal","ReactDOM","createPortal","onClick","onDismiss","e","stopPropagation","content","actions","document","querySelector","createHistory","StreamDelete","Fragment","deleteStream","react_router_dom","to","components_Modal","renderContent","renderActions","history","push","_ref5","_callee5","_context5","delete","_x5","StreamList","fetchStreams","userId","currentUserId","map","key","renderAdmin","isSignedIn","style","textAlign","renderList","renderCreate","values","auth","_callee2","_context2","_x2","StreamShow","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","videoRef","createRef","buildPlayer","player","destroy","flv","createPlayer","url","attachMediaElement","current","load","_this$props$stream","ref","width","controls","GoogleAuth","onAuthChange","signIn","currentUser","getId","signOut","onSignInClick","onSignOutClick","_this2","window","gapi","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","Header","components_GoogleAuth","App","basename","components_Header","react_router","path","exact","INITIAL_STATE","combineReducers","length","undefined","action","objectSpread","formReducer","defineProperty","omit","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render","es","components_App"],"mappings":"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","file":"static/js/main.dff966f3.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n//host URL\r\nexport default axios.create({\r\n    baseURL: 'http://VeraButler.github.io/twitch-clone'\r\n});","import streams from '../apis/streams';\r\nimport {\r\n    SIGN_IN, \r\n    SIGN_OUT, \r\n    CREATE_STREAM,\r\n    FETCH_STREAM,\r\n    FETCH_STREAMS,\r\n    DELETE_STREAM,\r\n    EDIT_STREAM\r\n} from './types';\r\n\r\nexport const signIn = userId => {\r\n    return {\r\n        type: SIGN_IN,\r\n        payload: userId\r\n    };\r\n};\r\n\r\nexport const signOut = () =>{\r\n    return {\r\n        type: SIGN_OUT\r\n    };\r\n};\r\n\r\n/*\r\nuse axios async/await for dispatching CRUD actions\r\nBEFORE CODING: create table with information\r\nAction           | Method | Route        | Response\r\n-----------------|--------|--------------|-----------------\r\nlist all records | GET    | /streams     | Array of records\r\nget one record   | GET    | /streams/:id | Single record\r\ncreate record    | POST   | /streams     | Single record\r\nupdate record    | PUT    | /streams/:id | Single record\r\nDelete record    | DELETE | /streams/:id | Nothing\r\n*/\r\nexport const createStream = formValues => async dispatch => { \r\n    const response = await streams.post('/streams', formValues)\r\n\r\n    dispatch({ type: CREATE_STREAM, payload: response.data})\r\n};\r\n\r\nexport const fetchStreams = () => async dispatch => {\r\n    const response = await streams.get('/streams');\r\n\r\n    dispatch({type: FETCH_STREAMS, payload: response.data})\r\n}\r\n\r\nexport const fetchStream = id => async dispatch => {\r\n    const response = await streams.get(`/streams/${id}`);\r\n\r\n    dispatch({type: FETCH_STREAM, payload: response.data })\r\n}\r\n\r\nexport const editStream = ( id, formValues ) => async dispatch => {\r\n    //put(<what to put>, <what to change>)\r\n    const response = await streams.put(`/streams/${id}`, formValues)\r\n\r\n    dispatch({type: EDIT_STREAM, payload: response.data })\r\n}\r\n\r\nexport const deleteStream = id => async dispatch => {\r\n    await streams.delete(`streams/${id}`);\r\n\r\n    dispatch({type: DELETE_STREAM, payload: id})\r\n}","// All types used in Action Creators and Reducers\r\n// Prevents errors from typos! BEST PRACTICE\r\nexport const SIGN_IN = 'SIGN_IN';\r\nexport const SIGN_OUT = 'SIGN_OUT';\r\nexport const CREATE_STREAM = 'CREATE_STREAM';\r\nexport const FETCH_STREAMS = 'FETCH_STREAMS';\r\nexport const FETCH_STREAM = 'FETCH_STREAM';\r\nexport const DELETE_STREAM = 'DELETE_STREAM';\r\nexport const EDIT_STREAM = 'EDIT_STREAM';","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nclass StreamForm extends React.Component {\r\n    renderError({ error, touched }) {\r\n        if (touched && error) {\r\n            return (\r\n                <div className=\"ui error message\">\r\n                    <div className=\"header\">{error}</div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderInput = ({ input, label, meta }) => {\r\n        const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\r\n        return (\r\n            <div className={className}>\r\n                <label>{label}</label>\r\n                <input {...input} autoComplete=\"off\" />\r\n                {this.renderError(meta)}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    onSubmit = formValues => {\r\n        this.props.onSubmit(formValues);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form\r\n                onSubmit={this.props.handleSubmit(this.onSubmit)}\r\n                className=\"ui form error\"\r\n            >\r\n                <Field name=\"title\" component={this.renderInput} label=\"Enter Title\" />\r\n                <Field\r\n                    name=\"description\"\r\n                    component={this.renderInput}\r\n                    label=\"Enter Description\"\r\n                />\r\n                <button className=\"ui button primary\">Submit</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst validate = formValues => {\r\n    const errors = {};\r\n\r\n    if (!formValues.title) {\r\n        errors.title = 'You must enter a title';\r\n    }\r\n\r\n    if (!formValues.description) {\r\n        errors.description = 'You must enter a description';\r\n    }\r\n\r\n    return errors;\r\n};\r\n\r\nexport default reduxForm({\r\n    form: 'streamForm',\r\n    validate\r\n})(StreamForm);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStream } from '../../actions';\r\nimport StreamForm from './StreamForm';\r\n\r\nclass StreamCreate extends React.Component {\r\n    onSubmit = formValues => {\r\n        this.props.createStream(formValues);\r\n        // console.log(formValues);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Create a Stream</h3>\r\n                <StreamForm onSubmit={this.onSubmit} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    { createStream }\r\n)(StreamCreate);","import _ from 'lodash';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchStream, editStream } from '../../actions';\r\nimport StreamForm from './StreamForm';\r\n\r\nclass StreamEdit extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchStream(this.props.match.params.id);\r\n    }\r\n\r\n    onSubmit = formValues => {\r\n        this.props.editStream(this.props.match.params.id, formValues);\r\n    };\r\n\r\n    render() {\r\n        if (!this.props.stream) {\r\n            return <div>Loading...</div>;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h3>Edit a Stream</h3>\r\n                <StreamForm\r\n                    initialValues={_.pick(this.props.stream, 'title', 'description')}\r\n                    onSubmit={this.onSubmit}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { stream: state.streams[ownProps.match.params.id] };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchStream, editStream }\r\n)(StreamEdit);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst Modal = props => {\r\n    return ReactDOM.createPortal(\r\n        <div onClick={props.onDismiss} className=\"ui dimmer modals visible active\">\r\n            <div\r\n                onClick={e => e.stopPropagation()}\r\n                className=\"ui standard modal visible active\"\r\n            >\r\n                <div className=\"header\">{props.title}</div>\r\n                <div className=\"content\">{props.content}</div>\r\n                <div className=\"actions\">{props.actions}</div>\r\n            </div>\r\n        </div>,\r\n        document.querySelector('#modal')\r\n    );\r\n};\r\n\r\nexport default Modal;","import createHistory from 'history/createBrowserHistory';\r\n\r\nexport default createHistory();","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Modal from '../Modal';\r\nimport history from '../../history';\r\nimport { fetchStream, deleteStream } from '../../actions';\r\n\r\nclass StreamDelete extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchStream(this.props.match.params.id);\r\n    }\r\n\r\n    renderActions() {\r\n        const { id } = this.props.match.params;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <button\r\n                    onClick={() => this.props.deleteStream(id)}\r\n                    className=\"ui button negative\"\r\n                >\r\n                    Delete\r\n                </button>\r\n                <Link to=\"/\" className=\"ui button\">\r\n                    Cancel\r\n                </Link>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    renderContent() {\r\n        if (!this.props.stream) {\r\n            return 'Are you sure you want to delete this stream?';\r\n        }\r\n\r\n        return `Are you sure you want to delete the stream with title: ${\r\n            this.props.stream.title\r\n        }`;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                title=\"Delete Stream\"\r\n                content={this.renderContent()}\r\n                actions={this.renderActions()}\r\n                onDismiss={() => history.push('/')}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { stream: state.streams[ownProps.match.params.id] };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchStream, deleteStream }\r\n)(StreamDelete);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchStreams } from '../../actions';\r\n\r\nclass StreamList extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchStreams();\r\n    }\r\n\r\n    renderAdmin(stream) {\r\n        if (stream.userId === this.props.currentUserId) {\r\n            return (\r\n                <div className=\"right floated content\">\r\n                    <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">\r\n                        Edit\r\n                    </Link>\r\n                    <Link\r\n                        to={`/streams/delete/${stream.id}`}\r\n                        className=\"ui button negative\"\r\n                    >\r\n                        Delete\r\n                    </Link>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderList() {\r\n        return this.props.streams.map(stream => {\r\n            return (\r\n                <div className=\"item\" key={stream.id}>\r\n                    {this.renderAdmin(stream)}\r\n                    <i className=\"large middle aligned icon camera\" />\r\n                    <div className=\"content\">\r\n                        <Link to={`/streams/${stream.id}`} className=\"header\">\r\n                            {stream.title}\r\n                        </Link>\r\n                        <div className=\"description\">{stream.description}</div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    renderCreate() {\r\n        if (this.props.isSignedIn) {\r\n            return (\r\n                <div style={{ textAlign: 'right' }}>\r\n                    <Link to=\"/streams/new\" className=\"ui button primary\">\r\n                        Create Stream\r\n                    </Link>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Streams</h2>\r\n                <div className=\"ui celled list\">{this.renderList()}</div>\r\n                {this.renderCreate()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        streams: Object.values(state.streams),\r\n        currentUserId: state.auth.userId,\r\n        isSignedIn: state.auth.isSignedIn\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchStreams }\r\n)(StreamList);","import React from 'react';\r\nimport flv from 'flv.js';\r\nimport { connect } from 'react-redux';\r\nimport { fetchStream } from '../../actions';\r\n\r\nclass StreamShow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.videoRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n\r\n        this.props.fetchStream(id);\r\n        this.buildPlayer();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.buildPlayer();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.player.destroy();\r\n    }\r\n\r\n    buildPlayer() {\r\n        if (this.player || !this.props.stream) {\r\n            return;\r\n        }\r\n\r\n        const { id } = this.props.match.params;\r\n        this.player = flv.createPlayer({\r\n            type: 'flv',\r\n            url: `http://localhost:8000/live/${id}.flv`\r\n        });\r\n        this.player.attachMediaElement(this.videoRef.current);\r\n        this.player.load();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.stream) {\r\n            return <div>Loading...</div>;\r\n        }\r\n\r\n        const { title, description } = this.props.stream;\r\n\r\n        return (\r\n            <div>\r\n                <video ref={this.videoRef} style={{ width: '100%' }} controls />\r\n                <h1>{title}</h1>\r\n                <h5>{description}</h5>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { stream: state.streams[ownProps.match.params.id] };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchStream }\r\n)(StreamShow);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn, signOut } from '../actions';\r\n\r\nclass GoogleAuth extends React.Component {\r\n    componentDidMount() {\r\n        // initialize google js lib for auth2\r\n        // https://developers.google.com/api-client-library/javascript/reference/referencedocs\r\n        window.gapi.load('client:auth2', () => {\r\n            window.gapi.client.init({\r\n                clientId: '904891345469-d4bnd4ce6nvgqklsh0kpqqeqeuvst1u7.apps.googleusercontent.com',\r\n                scope: 'email'\r\n            }).then(()=>{\r\n                this.auth = window.gapi.auth2.getAuthInstance();\r\n                \r\n                this.onAuthChange(this.auth.isSignedIn.get());\r\n                this.auth.isSignedIn.listen(this.onAuthChange);\r\n            });\r\n        });\r\n    }\r\n    // method for auth changes\r\n    onAuthChange = (isSignedIn) => {\r\n        if (isSignedIn) {\r\n            this.props.signIn(this.auth.currentUser.get().getId());\r\n        } else {\r\n            this.props.signOut();\r\n        }\r\n    }\r\n\r\n    // sign in auth\r\n    onSignInClick = () => {\r\n        this.auth.signIn();\r\n    }\r\n\r\n    // sign out auth\r\n    onSignOutClick = () => {\r\n        this.auth.signOut();\r\n    }\r\n\r\n    // helper render method for logging in\r\n    renderAuthButton() {\r\n        // possible update after google auth code is implemented\r\n        if (this.props.isSignedIn === null) {\r\n            return null;\r\n        } else if (this.props.isSignedIn) {\r\n            return (\r\n                <button onClick={this.onSignOutClick} className=\"ui red google button\">\r\n                <i className=\"google icon\" />\r\n                Sign Out\r\n                </button>\r\n            ); \r\n        } else {\r\n            return (\r\n                <button onClick={this.onSignInClick} className=\"ui red google button\">\r\n                <i className=\"google icon\" />\r\n                Sign In with Google\r\n                </button>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>{this.renderAuthButton()}</div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {isSignedIn: state.auth.isSignedIn}\r\n};\r\n\r\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport GoogleAuth from './GoogleAuth';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"ui secondary pointing menu\">\r\n            <Link to='/' className=\"item\">\r\n                Streamer\r\n            </Link>\r\n            <div className=\"right menu\">\r\n                <Link to='/' className=\"item\">\r\n                    All Streams\r\n                </Link>\r\n                <GoogleAuth />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport StreamCreate from './streams/StreamCreate';\r\nimport StreamEdit from './streams/StreamEdit';\r\nimport StreamDelete from './streams/StreamDelete';\r\nimport StreamList from './streams/StreamList';\r\nimport StreamShow from './streams/StreamShow';\r\nimport Header from './Header';\r\nimport history from '../history';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"ui container\">\r\n            <BrowserRouter history={history} basename={\"/twitch-clone\"}>\r\n                <div>\r\n                    <Header />\r\n                    <Switch>\r\n                        <Route path=\"/\" exact component={StreamList} />\r\n                        <Route path=\"/streams/new\" exact component={StreamCreate} />\r\n                        <Route path=\"/streams/edit/:id\" exact component={StreamEdit} />\r\n                        <Route path=\"/streams/delete/:id\" exact component={StreamDelete} />\r\n                        <Route path=\"/streams/:id\" exact component={StreamShow} />\r\n                    </Switch>\r\n                </div>\r\n            </BrowserRouter>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","import { SIGN_IN, SIGN_OUT } from '../actions/types';\r\n\r\n\r\n// prevents undefined state\r\nconst INITIAL_STATE = {\r\n    isSignedIn: null,\r\n    userId: null\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case SIGN_IN:\r\n            return {...state, isSignedIn: true, userId: action.payload};\r\n        case SIGN_OUT:\r\n            return {...state, isSignedIn: false, userId: null};\r\n        default:\r\n            return state;\r\n    }\r\n};","import { combineReducers } from 'redux';\r\nimport {reducer as formReducer } from 'redux-form';\r\nimport authReducer from './authReducer';\r\nimport streamReducer from \"./streamReducer\";\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    streams: streamReducer\r\n});","/*\r\nARRAY BASED APPROACH\r\nconst streamReducer = (state=[], action) => {\r\n    switch (action.type) {\r\n        case EDIT_STREAM:\r\n            return state.map(stream => {\r\n                if (stream.id === action.payload.id) {\r\n                    return action.payload;\r\n                } else {\r\n                    return stream;\r\n                }\r\n            })\r\n        default:\r\n          return state;\r\n    }\r\n}\r\n\r\nOBJECT-BASED APPROACH\r\nconst streamReducer = (state={}, action) => {\r\n    switch (action.type) {\r\n        case EDIT_STREAM:\r\n            // ...state takes all the key:value pairs from state object\r\n            // const newState = { ...state};\r\n            // newState[action.payload.id] = action.payload;\r\n            // return newState;\r\n\r\n            // ES6 syntax sugar\r\n                            // key interperlation - use when you don't know what the key will be\r\n                            // selected stream's [key]: value added to the state object\r\n            return {...state, [action.payload.id]: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n*/\r\n\r\n/* FINAL APPROACH */\r\nimport _ from 'lodash';\r\nimport {\r\n    FETCH_STREAM,\r\n    FETCH_STREAMS,\r\n    EDIT_STREAM,\r\n    CREATE_STREAM,\r\n    DELETE_STREAM\r\n} from '../actions/types';\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case FETCH_STREAM:\r\n            return {...state, [action.payload.id]: action.payload};\r\n        case CREATE_STREAM:\r\n            return {...state, [action.payload.id]: action.payload};\r\n        case EDIT_STREAM:\r\n            return {...state, [action.payload.id]: action.payload};\r\n        case DELETE_STREAM:\r\n            //_ is lodash command\r\n            // because the payload in the action creator is the id only use action.payload NOT action.payload.id\r\n            return _.omit(state, action.payload);\r\n        case FETCH_STREAMS:\r\n            return {...state}\r\n        default:\r\n            return state;\r\n    }\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider } from 'react-redux';\r\nimport reduxThunk from 'redux-thunk';\r\n// add applyMiddleware, compose for react-devtools-extension\r\nimport {createStore, applyMiddleware, compose} from 'redux';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\n// const for react-devtools-extension\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    reducers,\r\n    // add for react-devtools-extension\r\n    composeEnhancers(applyMiddleware(reduxThunk))\r\n    );\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, \r\ndocument.querySelector('#root'));"],"sourceRoot":""}